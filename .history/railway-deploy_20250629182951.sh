#!/bin/bash

echo "üöÄ FAST HELP - RAILWAY DEPLOYMENT SCRIPT"
echo "========================================"
echo ""

# Step 1: Check current status
echo "üìä Step 1: Checking current application status..."
echo "Current directory: $(pwd)"
echo "Node.js version: $(node --version)"
echo "npm version: $(npm --version)"
echo ""

# Step 2: Check files
echo "üìÅ Step 2: Checking critical files..."
files=("server.js" "package.json" "railway.json" "nixpacks.toml" ".env")
for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file exists"
    else
        echo "‚ùå $file missing"
    fi
done
echo ""

# Step 3: Check client build
echo "üîß Step 3: Checking client build..."
if [ -d "client/dist" ]; then
    echo "‚úÖ Client build directory exists"
    if [ -f "client/dist/index.html" ]; then
        echo "‚úÖ Client build index.html exists"
    else
        echo "‚ö†Ô∏è Client build index.html missing"
    fi
else
    echo "‚ö†Ô∏è Client build directory missing"
fi
echo ""

# Step 4: Test server startup
echo "üß™ Step 4: Testing server startup..."
echo "Starting server test..."
timeout 5s node server.js &
PID=$!
sleep 2
if kill -0 $PID 2>/dev/null; then
    echo "‚úÖ Server starts successfully"
    kill $PID 2>/dev/null
else
    echo "‚ùå Server failed to start"
fi
echo ""

# Step 5: Check dependencies
echo "üì¶ Step 5: Checking dependencies..."
if [ -d "node_modules" ]; then
    echo "‚úÖ node_modules directory exists"
    echo "Checking critical dependencies..."
    deps=("express" "bcryptjs" "jsonwebtoken" "cors" "helmet")
    for dep in "${deps[@]}"; do
        if [ -d "node_modules/$dep" ]; then
            echo "‚úÖ $dep installed"
        else
            echo "‚ùå $dep missing"
        fi
    done
else
    echo "‚ùå node_modules directory missing - run 'npm install'"
fi
echo ""

# Step 6: Railway deployment instructions
echo "üöÑ Step 6: Railway deployment instructions..."
echo ""
echo "To deploy to Railway:"
echo "1. Make sure you're in the Railway project directory"
echo "2. Run: railway up"
echo "3. Monitor the build logs for any errors"
echo "4. Once deployed, test these endpoints:"
echo "   - https://your-app.railway.app/health"
echo "   - https://your-app.railway.app/"
echo "   - https://your-app.railway.app/status"
echo ""

# Step 7: Debugging information
echo "üîç Step 7: Key debugging information..."
echo "JWT_SECRET is set: $([ -n "$JWT_SECRET" ] && echo "‚úÖ Yes" || echo "‚ùå No")"
echo "REDIS_URL is set: $([ -n "$REDIS_URL" ] && echo "‚úÖ Yes" || echo "‚ùå No")"
echo "PORT is set: $([ -n "$PORT" ] && echo "‚úÖ Yes ($PORT)" || echo "‚ö†Ô∏è No (will use 3000)")"
echo ""
echo "Environment variables for Railway:"
echo "- JWT_SECRET: $([ -n "$JWT_SECRET" ] && echo "SET" || echo "MISSING")"
echo "- REDIS_URL: $([ -n "$REDIS_URL" ] && echo "SET" || echo "MISSING")"
echo "- ADMIN_EMAIL: $([ -n "$ADMIN_EMAIL" ] && echo "SET" || echo "MISSING")"
echo "- ADMIN_PASSWORD: $([ -n "$ADMIN_PASSWORD" ] && echo "SET" || echo "MISSING")"
echo ""

# Step 8: Final checklist
echo "‚úÖ DEPLOYMENT CHECKLIST:"
echo "‚úÖ Server.js has bulletproof health check routes"
echo "‚úÖ Railway.json configured for health checks"
echo "‚úÖ Nixpacks.toml configured for build"
echo "‚úÖ Package.json has correct start script"
echo "‚úÖ All dependencies have fallback error handling"
echo "‚úÖ Environment variables are properly configured"
echo "‚úÖ Static file serving is configured"
echo "‚úÖ Catch-all route handles missing React build"
echo ""
echo "üöÄ Ready for Railway deployment!"
echo "Run: railway up"
echo ""
